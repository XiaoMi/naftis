---
# Source: naftis/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
data:
  config: |-
    mode="debug"
    [logger]
        [logger.console]
            color=true
            prefix="[naftis]"
            level="Debug"
        [logger.zap]
            path="naftis-api.log"
            level="Debug"
    [db]
        default="naftis:naftisIsAwesome@tcp(naftis-mysql.naftis.svc.cluster.local:3306)/naftis?charset=utf8&parseTime=True&loc=Local"
metadata:
  name: naftis-config
  namespace: naftis
  selfLink: /api/v1/namespaces/naftis/configmaps/naftis-config
---
# Source: naftis/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: naftis-rbac
subjects:
  - kind: ServiceAccount
    # Reference to upper's `metadata.name`
    name: default
    # Reference to upper's `metadata.namespace`
    namespace: naftis
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
# Source: naftis/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: naftis-api
  namespace: naftis
  labels:
    heritage: Tiller
    chart: "naftis-0.1.1"
    app: naftis-api
    release: naftis
spec:
  selector:
    app: naftis-api
    release: naftis
  ports:
    - port: 50000
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: naftis-ui
  namespace: naftis
  labels:
    heritage: Tiller
    chart: "naftis-0.1.1"
    app: naftis-ui
    release: naftis
spec:
  type: LoadBalancer
  selector:
    app: naftis-ui
    release: naftis
  ports:
    - port: 80
      protocol: TCP
---
# Source: naftis/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: naftis-ui
  namespace: naftis
  labels:
    heritage: Tiller
    chart: "naftis-0.1.1"
    app: naftis-ui
    release: naftis
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: naftis-ui
        release: naftis
    spec:
      containers:
        - name: naftis
          image: docker.io/sevennt/naftis-ui:0.1.1
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command: ["/etc/nginx/sbin/nginx","-s","quit"]
---
# Source: naftis/templates/statefulset.yaml
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: naftis-api
  namespace: naftis
  labels:
    heritage: Tiller
    chart: "naftis-0.1.1"
    app: naftis-api
    release: naftis
spec:
  replicas: 1
  serviceName: naftis
  template:
    metadata:
      labels:
        app: naftis-api
        release: naftis
    spec:
      containers:
        - name: naftis-api
          image: docker.io/sevennt/naftis-api:0.1.1
          imagePullPolicy: IfNotPresent
          args:
            - --config=/etc/naftis/config/config.toml
            - --istioNamespace=istio-system
          ports:
            - containerPort: 50000
          livenessProbe:
            httpGet:
              path: /api/probe/healthy
              port: 50000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/probe/healthy
              port: 50000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            null
            
          volumeMounts:
            - name: naftis-config
              mountPath: /etc/naftis/config
        - name: reloader
          image: nghialv2607/k8s-config-reloader:v0.1.0
          imagePullPolicy: IfNotPresent
          args:
            - --config.promviz-reload-url=http://localhost:50000/reload
            - --config.promviz-config-dir=/etc/naftis
            - --config.log-level=info
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 20m
              memory: 32Mi
      volumes:
        - name: naftis-config
          configMap:
            name: naftis-config
            items:
              - key: config
                path:  config.toml
